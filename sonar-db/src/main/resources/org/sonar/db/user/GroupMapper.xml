<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.db.user.GroupMapper">

  <sql id="groupColumns">
    g.id as id,
    g.name as name,
    g.description as description,
    g.organization_uuid as organizationUuid,
    g.created_at as "createdAt",
    g.updated_at as "updatedAt"
  </sql>

  <select id="selectByName" parameterType="map" resultType="Group">
    select
    <include refid="groupColumns"/>
    from groups g
    where g.organization_uuid = #{organizationUuid} and g.name = #{name}
  </select>

  <select id="selectByKey" parameterType="string" resultType="Group">
    SELECT
    <include refid="groupColumns"/>
    FROM groups g
    where g.name=#{id}
  </select>

  <select id="selectById" parameterType="long" resultType="Group">
    SELECT
    <include refid="groupColumns"/>
    FROM groups g
    <where>
      g.id=#{id}
    </where>
  </select>

  <delete id="deleteById" parameterType="long">
    DELETE FROM groups
    <where>
      id=#{id}
    </where>
  </delete>

  <select id="selectByUserLogin" parameterType="string" resultType="Group">
    select
    <include refid="groupColumns"/>
    from groups g
    inner join groups_users gu on gu.group_id = g.id
    inner join users u on u.id = gu.user_id
    where  u.login=#{login}
  </select>

  <select id="selectByNames" parameterType="map" resultType="Group">
    SELECT
    <include refid="groupColumns"/>
    FROM groups g
    <where>
      g.name IN
      <foreach item="name" index="index" collection="names" open="(" separator="," close=")">
        #{name}
      </foreach>
    </where>
  </select>

  <insert id="insert" parameterType="Group" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
    insert into groups (organization_uuid, name, description, created_at, updated_at)
    values (
      #{organizationUuid,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR},
      #{createdAt},
      #{updatedAt}
    )
  </insert>

  <update id="update" parameterType="Group">
    UPDATE groups SET
    name=#{name},
    description=#{description},
    updated_at=#{updatedAt}
    WHERE id=#{id}
  </update>

  <select id="selectByQuery" parameterType="map" resultType="Group">
    SELECT
    <include refid="groupColumns"/>
    FROM groups g
    <where>
      <if test="query!=null">
        UPPER(g.name) LIKE #{query} ESCAPE '/'
      </if>
    </where>
    ORDER BY UPPER(g.name)
  </select>

  <select id="countByQuery" parameterType="map" resultType="int">
    SELECT count(1)
    FROM groups g
    <where>
      <if test="query!=null">
        UPPER(g.name) LIKE #{query} ESCAPE '/'
      </if>
    </where>
  </select>
</mapper>
